{\rtf1\ansi\ansicpg1252\cocoartf2761
\cocoatextscaling0\cocoaplatform0{\fonttbl\f0\fnil\fcharset0 HelveticaNeue;\f1\fnil\fcharset0 .SFNS-Regular_wdth_opsz120000_GRAD_wght2580000;\f2\fnil\fcharset0 .AppleSystemUIFontMonospaced-Regular;
\f3\fnil\fcharset0 .SFNSMono-Light_YAXS140B3BC_wght1F40000;\f4\fnil\fcharset0 .SFNSMono-Light_YAXS140B3B6_wght1F40000;\f5\fnil\fcharset0 .SFNS-Regular_wdth_opsz110000_GRAD_wght2580000;
\f6\froman\fcharset0 Times-Roman;\f7\froman\fcharset0 Times-Bold;\f8\froman\fcharset0 Times-Italic;
\f9\fmodern\fcharset0 Courier;}
{\colortbl;\red255\green255\blue255;\red12\green12\blue12;\red255\green255\blue255;\red147\green0\blue147;
\red247\green247\blue247;\red42\green44\blue51;\red50\green94\blue238;\red178\green113\blue6;\red231\green231\blue231;
\red0\green0\blue0;}
{\*\expandedcolortbl;;\cssrgb\c5098\c5098\c5098;\cssrgb\c100000\c100000\c100000;\cssrgb\c65098\c14902\c64314;
\cssrgb\c97647\c97647\c97647;\cssrgb\c21961\c22745\c25882;\cssrgb\c25098\c47059\c94902;\cssrgb\c75686\c51765\c392;\cssrgb\c92549\c92549\c92549;
\cssrgb\c0\c0\c0;}
{\*\listtable{\list\listtemplateid1\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid1}
{\list\listtemplateid2\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid101\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid102\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid103\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li2160\lin2160 }{\listname ;}\listid2}
{\list\listtemplateid3\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid3}
{\list\listtemplateid4\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid301\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid4}
{\list\listtemplateid5\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid401\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid5}
{\list\listtemplateid6\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid501\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid502\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid6}
{\list\listtemplateid7\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid601\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid7}
{\list\listtemplateid8\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid701\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid8}
{\list\listtemplateid9\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid801\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid9}
{\list\listtemplateid10\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid901\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid10}
{\list\listtemplateid11\listhybrid{\listlevel\levelnfc0\levelnfcn0\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{decimal\}}{\leveltext\leveltemplateid1001\'01\'00;}{\levelnumbers\'01;}\fi-360\li720\lin720 }{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{circle\}}{\leveltext\leveltemplateid1002\'01\uc0\u9702 ;}{\levelnumbers;}\fi-360\li1440\lin1440 }{\listname ;}\listid11}
{\list\listtemplateid12\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1101\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid12}
{\list\listtemplateid13\listhybrid{\listlevel\levelnfc23\levelnfcn23\leveljc0\leveljcn0\levelfollow0\levelstartat1\levelspace360\levelindent0{\*\levelmarker \{disc\}}{\leveltext\leveltemplateid1201\'01\uc0\u8226 ;}{\levelnumbers;}\fi-360\li720\lin720 }{\listname ;}\listid13}}
{\*\listoverridetable{\listoverride\listid1\listoverridecount0\ls1}{\listoverride\listid2\listoverridecount0\ls2}{\listoverride\listid3\listoverridecount0\ls3}{\listoverride\listid4\listoverridecount0\ls4}{\listoverride\listid5\listoverridecount0\ls5}{\listoverride\listid6\listoverridecount0\ls6}{\listoverride\listid7\listoverridecount0\ls7}{\listoverride\listid8\listoverridecount0\ls8}{\listoverride\listid9\listoverridecount0\ls9}{\listoverride\listid10\listoverridecount0\ls10}{\listoverride\listid11\listoverridecount0\ls11}{\listoverride\listid12\listoverridecount0\ls12}{\listoverride\listid13\listoverridecount0\ls13}}
\paperw11900\paperh16840\margl1440\margr1440\vieww15360\viewh11400\viewkind0
\deftab720
\pard\pardeftab720\sa80\partightenfactor0

\f0\fs28 \cf2 \cb3 \expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 A useful way to structure this kind of hierarchy is to treat each level as a clear, composable abstraction with consistent interfaces:\
\pard\pardeftab720\sa80\partightenfactor0

\f1\b\fs36 \cf2 1. Template layer\
\pard\pardeftab720\sa80\partightenfactor0

\f0\b0\fs28 \cf2 Represents the smallest unit\'97e.g., a PSF template, a filter response, or any single object representation.\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 Template\cf6 \strokec6 : ...\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f0\fs28 \cf2 \cb3 If an object can have multiple templates (per band, per filter, etc.), you can wrap them in a collection:\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 TemplateCollection\cf6 \strokec6 : \cf4 \strokec4 def\cf6 \strokec6  \cf7 \strokec7 __init__\cf6 \strokec6 (self, templates: \cf8 \strokec8 list\cf6 \strokec6 [Template]): self.templates = templates\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f1\b\fs36 \cf2 \cb3 2. Object layer\
\pard\pardeftab720\sa80\partightenfactor0

\f0\b0\fs28 \cf2 Represents a physical source or entity in the scene. It can hold a\'a0
\f3\fs24\fsmilli12250 \cb9 TemplateCollection
\f0\fs28 \cb3 \'a0or a mapping (
\f4\fs24\fsmilli12250 \cb9 band \uc0\u8594  template
\f0\fs28 \cb3 ):\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 Source\cf6 \strokec6 : \cf4 \strokec4 def\cf6 \strokec6  \cf7 \strokec7 __init__\cf6 \strokec6 (self, templates: TemplateCollection): self.templates = templates\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f0\fs28 \cf2 \cb3 A helper that operates on many\'a0
\f4\fs24\fsmilli12250 \cb9 Source
\f0\fs28 \cb3 \'a0instances:\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 SourceManager\cf6 \strokec6 : \cf4 \strokec4 def\cf6 \strokec6  \cf7 \strokec7 __init__\cf6 \strokec6 (self, sources: \cf8 \strokec8 list\cf6 \strokec6 [Source]): self.sources = sources ...\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f1\b\fs36 \cf2 \cb3 3. Scene layer\
\pard\pardeftab720\sa80\partightenfactor0

\f0\b0\fs28 \cf2 Bundles the context in which sources exist:\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 Scene\cf6 \strokec6 : \cf4 \strokec4 def\cf6 \strokec6  \cf7 \strokec7 __init__\cf6 \strokec6 (self, sources: \cf8 \strokec8 list\cf6 \strokec6 [Source]): self.sources = sources\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f1\b\fs36 \cf2 \cb3 4. Scene collection / graph layer\
\pard\pardeftab720\sa80\partightenfactor0

\f0\b0\fs28 \cf2 Handles lists of scenes, relationships, and joins\'97e.g., building a tree or a DAG of scenes across observations:\
\pard\pardeftab720\partightenfactor0

\f2\fs21 \cf2 \cb1 \
\pard\pardeftab720\partightenfactor0
\cf4 \cb5 \strokec4 class\cf6 \strokec6  \cf7 \strokec7 SceneGraph\cf6 \strokec6 : \cf4 \strokec4 def\cf6 \strokec6  \cf7 \strokec7 __init__\cf6 \strokec6 (self, scenes: \cf8 \strokec8 list\cf6 \strokec6 [Scene]): self.scenes = scenes ...\cf2 \cb1 \strokec2 \
\pard\pardeftab720\sa80\partightenfactor0

\f1\b\fs36 \cf2 \cb3 Notes and tips\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls1\ilvl0
\f5\fs28 \cf2 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Interfaces / ABCs:
\f0\b0 \'a0Define abstract base classes or protocols so each layer can be swapped or extended.\cb1 \
\ls1\ilvl0
\f5\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Generics or type hints:
\f0\b0 \'a0Keep APIs type-safe and explicit.\cb1 \
\ls1\ilvl0
\f5\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Pure operations:
\f0\b0 \'a0Methods that operate on lists (
\f4\fs24\fsmilli12250 \cb9 SourceManager
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 SceneGraph
\f0\fs28 \cb3 ) can remain stateless, returning new objects rather than mutating in place.\cb1 \
\ls1\ilvl0
\f5\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Naming:
\f0\b0 \'a0Choose names that reflect the domain:\'a0
\f4\fs24\fsmilli12250 \cb9 Template
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 Source
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 Scene
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 SceneGraph
\f0\fs28 \cb3 . \'93Manager,\'94 \'93Collection,\'94 or \'93Set\'94 suffixes indicate a class operating on a list of objects.\cb1 \
\ls1\ilvl0
\f5\b \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Reuse:
\f0\b0 \'a0The same pattern can support multiple template types per object or multiple representations (e.g., \'93truth grid,\'94 PSF variations) by storing them in\'a0
\f4\fs24\fsmilli12250 \cb9 TemplateCollection
\f0\fs28 \cb3 \'a0and providing lookup methods.\cb1 \
\pard\pardeftab720\sa80\partightenfactor0
\cf2 \cb3 This layered approach promotes reuse: each class has a single responsibility, and higher-level classes compose the lower-level ones, making it easy to extend or modify individual layers without rewriting the rest.\
\
\
\pard\pardeftab720\sa80\partightenfactor0

\f5\b \cf2 \cb3 \strokec2 Suggested abstraction layers
\f0\b0 \cf2 \cb3 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls2\ilvl0
\f5\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Template layer
\f0\b0 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa80\partightenfactor0
\ls2\ilvl1
\f4\fs24\fsmilli12250 \cf2 \cb9 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Template
\f0\fs28 \cb3 \'a0(abstract base class): represents one model of an object in a single band or representation (PSF, truth grid, etc.).\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa80\partightenfactor0
\ls2\ilvl2\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Attributes:\'a0
\f4\fs24\fsmilli12250 \cb9 band
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 representation
\f0\fs28 \cb3 , metadata.\cb1 \
\ls2\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Methods:\'a0
\f4\fs24\fsmilli12250 \cb9 render
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 fit
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 to_array
\f0\fs28 \cb3 , etc.\cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa80\partightenfactor0
\ls2\ilvl1\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Concrete subclasses like\'a0
\f4\fs24\fsmilli12250 \cb9 BandTemplate
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 PSFTemplate
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 GridTemplate
\f0\fs28 \cb3 \'a0can handle specific data formats or fitting logic.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls2\ilvl0
\f5\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Object layer
\f0\b0 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa80\partightenfactor0
\ls2\ilvl1
\f4\fs24\fsmilli12250 \cf2 \cb9 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 TemplateSet
\f0\fs28 \cb3 \'a0or\'a0
\f4\fs24\fsmilli12250 \cb9 SourceModel
\f0\fs28 \cb3 : groups all\'a0
\f4\fs24\fsmilli12250 \cb9 Template
\f0\fs28 \cb3 \'a0instances belonging to the same physical object.\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa80\partightenfactor0
\ls2\ilvl2\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Stores a mapping from\'a0
\f4\fs24\fsmilli12250 \cb9 (band, representation)
\f0\fs28 \cb3 \'a0to\'a0
\f4\fs24\fsmilli12250 \cb9 Template
\f0\fs28 \cb3 .\cb1 \
\ls2\ilvl2\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provides cross-band operations such as simultaneous fitting or blending.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls2\ilvl0
\f5\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scene layer
\f0\b0 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa80\partightenfactor0
\ls2\ilvl1
\f4\fs24\fsmilli12250 \cf2 \cb9 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scene
\f0\fs28 \cb3 : container for many\'a0
\f4\fs24\fsmilli12250 \cb9 SourceModel
\f0\fs28 \cb3 \'a0objects plus scene-level metadata (time, pointing, image header).\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa80\partightenfactor0
\ls2\ilvl2\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Responsibilities: spatial indexing, bookkeeping, rendering the full image from sources, etc.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls2\ilvl0
\f5\b \cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Scene\uc0\u8209 collection layer
\f0\b0 \cb1 \
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa80\partightenfactor0
\ls2\ilvl1
\f4\fs24\fsmilli12250 \cf2 \cb9 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 SceneGraph
\f0\fs28 \cb3 \'a0or\'a0
\f4\fs24\fsmilli12250 \cb9 Survey
\f0\fs28 \cb3 : manages multiple\'a0
\f4\fs24\fsmilli12250 \cb9 Scene
\f0\fs28 \cb3 \'a0objects and builds relationships among them (e.g., temporal links, mosaics, joins).\cb1 \
\pard\tx1660\tx2160\pardeftab720\li2160\fi-2160\sa80\partightenfactor0
\ls2\ilvl2\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Offers utilities for constructing trees/graphs and propagating changes across scenes.\cb1 \
\pard\pardeftab720\sa80\partightenfactor0

\f5\b \cf2 \cb3 Design principles
\f0\b0 \cf2 \cb3 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls3\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Use composition: higher layers contain lists/dictionaries of lower-layer objects.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Keep classes small and cohesive: data in one class, algorithms in separate \'93service\'94 classes (e.g.,\'a0
\f4\fs24\fsmilli12250 \cb9 Fitter
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 Renderer
\f0\fs28 \cb3 ) when possible.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Provide clear interfaces via abstract base classes so new\'a0
\f4\fs24\fsmilli12250 \cb9 Template
\f0\fs28 \cb3 \'a0types or\'a0
\f4\fs24\fsmilli12250 \cb9 Scene
\f0\fs28 \cb3 \'a0operations can be added without touching existing code.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Favor generic names (
\f4\fs24\fsmilli12250 \cb9 Template
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 Scene
\f0\fs28 \cb3 ) but append domain-specific suffixes (
\f4\fs24\fsmilli12250 \cb9 PSFTemplate
\f0\fs28 \cb3 ,\'a0
\f4\fs24\fsmilli12250 \cb9 SceneGraph
\f0\fs28 \cb3 ) for clarity.\cb1 \
\ls3\ilvl0\cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 Allow flexibility in\'a0
\f4\fs24\fsmilli12250 \cb9 TemplateSet
\f0\fs28 \cb3 \'a0so objects can hold multiple templates or filters as needed.\cb1 \
\pard\pardeftab720\sa80\partightenfactor0

\f5\b \cf2 \cb3 Testing
\f0\b0 \cf2 \cb3 \strokec2 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\ls4\ilvl0\cf2 \cb3 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec2 No tests were run because this response only proposes design ideas and does not modify code or behavior.\cb1 \
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0
\cf2 \
\pard\pardeftab720\sa240\partightenfactor0

\f6\fs24 \cf0 \strokec10 Love this question. Here\'92s a clean, reusable layout that matches how you\'92re already working (single \'93thing\'94 + collections of things; scene + scenes; local vs global ops), while keeping bookkeeping sane (one object \uc0\u8594  many templates, gradient templates, components, etc.).\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 High\uc0\u8209 level principles\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls5\ilvl0
\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Model vs. Ops
\f6\b0 : keep 
\f8\i data containers
\f6\i0  (immutable-ish, hashable) separate from 
\f8\i services/algorithms
\f6\i0  (builders, solvers, graphers).\
\ls5\ilvl0
\f7\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 One vs. Many
\f6\b0 : for every atomic class, have a thin \'93
\f8\i Set
\f6\i0 /
\f8\i Collection
\f6\i0 \'94 peer that manages lists, indexing, and batch operations.\
\ls5\ilvl0
\f7\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Local vs. Global
\f6\b0 : local (per component/scene) solvers that can be composed into global runs.\
\ls5\ilvl0
\f7\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Explicit graphs
\f6\b0 : components are first-class: a 
\f9\fs26 Component
\f6\fs24  object + 
\f9\fs26 ComponentSet
\f6\fs24 .\
\ls5\ilvl0
\f7\b \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Pluggable policies
\f6\b0 : strategy objects for kernels, basis, overlap, rounding.\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Suggested class palette\
\pard\pardeftab720\sa298\partightenfactor0

\fs36 \cf0 \strokec10 Core data models (mostly dumb containers)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Template
\f6\fs24 : a single cutout + metadata (you already have this).\
\ls6\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 TemplateView
\f6\fs24 : light wrapper for \'93same template, different WCS/downsample,\'94 or gradient flavor (
\f9\fs26 kind=\{'flux','dx','dy',...\}
\f6\fs24 ).\
\ls6\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Source
\f6\fs24 : a logical object (can own 
\f7\b multiple
\f6\b0  templates: flux, grads, PSF-extended parts, etc.).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 fields: 
\f9\fs26 id
\f6\fs24 , 
\f9\fs26 templates: list[Template]
\f6\fs24 , 
\f9\fs26 centroid
\f6\fs24 , 
\f9\fs26 is_bright
\f6\fs24 , \'85\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f9\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Scene
\f6\fs24 : a calibrated image \'93frame\'94; owns arrays (
\f9\fs26 image
\f6\fs24 , 
\f9\fs26 weight
\f6\fs24 , 
\f9\fs26 wcs
\f6\fs24 ) + references to 
\f7\b sources
\f6\b0  used in that scene.\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 keeps 
\f9\fs26 sources: list[Source]
\f6\fs24 , not just templates.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls6\ilvl0
\f9\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Component
\f6\fs24 : a connected set within a scene (by overlap).\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls6\ilvl1\cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 fields: 
\f9\fs26 scene_id
\f6\fs24 , 
\f9\fs26 source_ids
\f6\fs24 , 
\f9\fs26 template_ids
\f6\fs24 , 
\f9\fs26 bbox
\f6\fs24 , cached basis origin.\
\pard\pardeftab720\sa298\partightenfactor0

\f7\b\fs36 \cf0 \strokec10 Collections (thin, index\uc0\u8209 friendly)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls7\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 TemplateSet
\f6\fs24 : list-like over 
\f9\fs26 Template
\f6\fs24  with fast lookup (by id, by bbox), and batch utilities (STRtree build, slicing by region).\
\ls7\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SourceSet
\f6\fs24 : same idea for 
\f9\fs26 Source
\f6\fs24 .\
\ls7\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SceneSet
\f6\fs24 : registry of scenes, relationships (joins/splits), spatial index of scenes, etc.\
\ls7\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ComponentSet
\f6\fs24 : output of grouping; gives iteration in topological blocks.\
\pard\pardeftab720\sa298\partightenfactor0

\f7\b\fs36 \cf0 \strokec10 Services / algorithms\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls8\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Extractor
\f6\fs24 : makes 
\f9\fs26 Template
\f6\fs24 s (and 
\f9\fs26 Source
\f6\fs24 s) from 
\f9\fs26 Scene
\f6\fs24  + segmap.\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 KernelConvolver
\f6\fs24 : pads/convolves templates; handles 
\f9\fs26 ee_rlim
\f6\fs24  cropping.\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Downsampler
\f6\fs24 : your bomb\uc0\u8209 proof 
\f9\fs26 _block_aligned
\f6\fs24  + WCS mapping.\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 OverlapIndexer
\f6\fs24 : builds edges via STRtree; produces 
\f9\fs26 ComponentSet
\f6\fs24 .\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 BasisBuilder
\f6\fs24 : evaluates per\uc0\u8209 component polynomial basis (order, origin policy).\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 NormalBuilder
\f6\fs24 : produces per\uc0\u8209 component blocks 
\f9\fs26 AA, AB, BB, bA, bB
\f6\fs24  with policy flags (e.g., \'93\uc0\u945 \'96G only for bright\'94).\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ComponentSolver
\f6\fs24 : solves one component (CG/LSQR/MINRES, preconditioning).\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 GlobalAstroFitter
\f6\fs24  (or simply 
\f9\fs26 SceneFitter
\f6\fs24 ): orchestrates per\uc0\u8209 component assembly+solve; merges results back to scene.\
\ls8\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SceneGraph
\f6\fs24 : optional spatial/temporal relationships among scenes (merging, stitching, cross\uc0\u8209 cal).\
\pard\pardeftab720\sa298\partightenfactor0

\f7\b\fs36 \cf0 \strokec10 Policies (plug\uc0\u8209 in strategies)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls9\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 OverlapPolicy
\f6\fs24 : how to decide edges (bbox\uc0\u8209 only, bbox+halo, pixel mask\'85).\
\ls9\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 BasisPolicy
\f6\fs24 : polynomial order, centering (component mean, median, fixed ref).\
\ls9\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 RoundingPolicy
\f6\fs24 : for Cutout2D (ceil/floor/round) + 
\f9\fs26 _block_aligned
\f6\fs24 .\
\ls9\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 GradientPolicy
\f6\fs24 : which cross\uc0\u8209 terms to include (bright\'d7bright only, etc.).\
\ls9\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Preconditioner
\f6\fs24 : Jacobi/IC(0)/none.\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Naming that reads well\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls10\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Data: 
\f9\fs26 Template
\f6\fs24 , 
\f9\fs26 Source
\f6\fs24 , 
\f9\fs26 Scene
\f6\fs24 , 
\f9\fs26 Component
\f6\fs24 .\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Collections: 
\f9\fs26 TemplateSet
\f6\fs24 , 
\f9\fs26 SourceSet
\f6\fs24 , 
\f9\fs26 SceneSet
\f6\fs24 , 
\f9\fs26 ComponentSet
\f6\fs24 .\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Ops: 
\f9\fs26 Extractor
\f6\fs24 , 
\f9\fs26 Downsampler
\f6\fs24 , 
\f9\fs26 OverlapIndexer
\f6\fs24 , 
\f9\fs26 BasisBuilder
\f6\fs24 , 
\f9\fs26 NormalBuilder
\f6\fs24 , 
\f9\fs26 ComponentSolver
\f6\fs24 , 
\f9\fs26 SceneFitter
\f6\fs24  (or 
\f9\fs26 GlobalAstroFitter
\f6\fs24  if spanning multiple scenes).\
\ls10\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Policies: 
\f9\fs26 \'85Policy
\f6\fs24  suffix.\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Minimal class sketches\
\pard\pardeftab720\partightenfactor0

\f9\b0\fs26 \cf0 \strokec10 # --- Data -------------------------------------------------\
@dataclass(frozen=True)\
class Template:\
    id: int\
    data: np.ndarray\
    slices_original: tuple[slice, slice]\
    slices_cutout: tuple[slice, slice]\
    bbox_original: tuple[tuple[int,int], tuple[int,int]]  # CLOSED\
    wcs: WCS | None\
    kind: str = "flux"  # or "dx", "dy", "wing", ...\
\
@dataclass\
class Source:\
    id: int\
    templates: list[Template]\
    centroid: tuple[float, float]\
    is_bright: bool = False\
\
@dataclass\
class Scene:\
    id: str\
    image: np.ndarray\
    weight: np.ndarray\
    wcs: WCS | None\
    sources: list[Source]\
\
@dataclass\
class Component:\
    scene_id: str\
    source_ids: list[int]\
    template_ids: list[int]\
    bbox: tuple[tuple[int,int],tuple[int,int]]\
    basis_origin: tuple[float, float] | None = None\
# --- Collections -----------------------------------------\
class TemplateSet:\
    def __init__(self, templates: list[Template]):\
        self._list = templates\
        self._id_to_idx = \{t.id: i for i,t in enumerate(templates)\}\
    def __getitem__(self, k): return self._list[k]\
    def by_id(self, tid: int) -> Template: return self._list[self._id_to_idx[tid]]\
    def __len__(self): return len(self._list)\
\
class SourceSet: ...\
class SceneSet: ...\
class ComponentSet:\
    def __init__(self, groups: list[list[int]]): self.groups = groups\
    def __iter__(self): return iter(self.groups)\
# --- Services (interfaces) --------------------------------\
class OverlapIndexer:\
    def build_components(self, templates: TemplateSet) -> ComponentSet: ...\
\
class BasisBuilder:\
    def eval(self, scene: Scene, comp: Component, sources: SourceSet, order: int) -> dict[int, np.ndarray]:\
        """Return basis vectors per bright source id within component."""\
\
class NormalBuilder:\
    def assemble(self, scene: Scene, comp: Component, basis: dict[int,np.ndarray], policy) -> tuple:\
        """Return AA, AB, BB, bA, bB for this component."""\
\
class ComponentSolver:\
    def solve(self, AA, AB, BB, bA, bB, policy) -> tuple[np.ndarray, np.ndarray]: ...\
\
class SceneFitter:\
    def fit(self, scene: Scene, policy) -> dict[str, Any]:\
        """Orchestrate: components -> (AA,AB,BB,...) -> solve -> collect \uc0\u945 ,\u946 ."""\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 How it flows (per scene)\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	1	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Extractor
\f6\fs24 : produce 
\f9\fs26 SourceSet
\f6\fs24  (each 
\f9\fs26 Source
\f6\fs24  with 1..N 
\f9\fs26 Template
\f6\fs24 s).\
\ls11\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	2	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 OverlapIndexer
\f6\fs24 : from 
\f7\b all templates
\f6\b0  (flux/grads), build 
\f9\fs26 ComponentSet
\f6\fs24  (connected components).\
\ls11\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	3	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 For each 
\f9\fs26 Component
\f6\fs24 :\
\pard\tx940\tx1440\pardeftab720\li1440\fi-1440\sa240\partightenfactor0
\ls11\ilvl1
\f9\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 BasisBuilder
\f6\fs24 : per\uc0\u8209 component basis for 
\f7\b bright
\f6\b0  sources (records origin/basis order).\
\ls11\ilvl1
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 NormalBuilder
\f6\fs24 : build + 
\f7\b collapse
\f6\b0  (
\f9\fs26 AA, AB, BB, bA, bB
\f6\fs24 ) honoring 
\f9\fs26 GradientPolicy
\f6\fs24  (e.g., bright\'d7bright G\'96G; \uc0\u945 \'96G from all\u8594 bright or bright\u8594 bright only).\
\ls11\ilvl1
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u9702 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 ComponentSolver
\f6\fs24 : solve the small block (or Schur) and return 
\f9\fs26 \uc0\u945 , \u946 
\f6\fs24 .\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls11\ilvl0
\f9\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	4	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SceneFitter
\f6\fs24 : gather all 
\f9\fs26 \uc0\u945 
\f6\fs24  onto sources/templates; store 
\f9\fs26 \uc0\u946 
\f6\fs24  with the component (and policy metadata) for later QA.\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Folder / module layout (simple)\
\pard\pardeftab720\partightenfactor0

\f9\b0\fs26 \cf0 \strokec10 mophongo/\
  core/\
    template.py        # Template, TemplateView\
    source.py          # Source\
    scene.py           # Scene\
    component.py       # Component, ComponentSet\
  ops/\
    extractor.py\
    convolver.py\
    downsample.py\
    overlap.py         # STRtree + csgraph\
    basis.py\
    normal.py\
    solver.py\
    fitter.py          # SceneFitter (aka GlobalAstroFitter for multi-scene)\
  policy/\
    overlap_policy.py\
    basis_policy.py\
    gradient_policy.py\
    rounding_policy.py\
    preconditioner.py\
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Concrete naming examples for your case\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls12\ilvl0
\f9\b0\fs26 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 SceneFitter
\f6\fs24  (single scene) or 
\f9\fs26 GlobalAstroFitter
\f6\fs24  (multi-scene cross\uc0\u8209 fit)\
\ls12\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 GradientPolicyBrightOnly
\f6\fs24  vs 
\f9\fs26 GradientPolicyAllAlphaToBright
\f6\fs24 \
\ls12\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 OverlapByHaloedBBox
\f6\fs24  (what you have)\
\ls12\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 BasisPoly(order=1, origin='component-centroid')
\f6\fs24 \
\ls12\ilvl0
\f9\fs26 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 PrecondJacobi
\f6\fs24 , 
\f9\fs26 PrecondIC0
\f6\fs24 \
\pard\pardeftab720\sa321\partightenfactor0

\f7\b\fs48 \cf0 \strokec10 Why this works well for you\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa240\partightenfactor0
\ls13\ilvl0
\f6\b0\fs24 \cf0 \kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 You can reuse the 
\f7\b same
\f6\b0  
\f9\fs26 NormalBuilder
\f6\fs24  for global or per\uc0\u8209 component runs; only the 
\f9\fs26 ComponentSet
\f6\fs24  changes.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Easy to test: mock a tiny 
\f9\fs26 Scene
\f6\fs24 \uc0\u8594 
\f9\fs26 SourceSet
\f6\fs24 \uc0\u8594 
\f9\fs26 TemplateSet
\f6\fs24 , run 
\f9\fs26 OverlapIndexer
\f6\fs24  and verify 
\f9\fs26 ComponentSet
\f6\fs24  and block solves.\
\ls13\ilvl0\kerning1\expnd0\expndtw0 \outl0\strokewidth0 {\listtext	\uc0\u8226 	}\expnd0\expndtw0\kerning0
\outl0\strokewidth0 \strokec10 Adding new template flavors (e.g. chromatic gradients) is just adding new 
\f9\fs26 Template(kind=...)
\f6\fs24  instances to a 
\f9\fs26 Source
\f6\fs24 .\
\pard\pardeftab720\sa240\partightenfactor0
\cf0 \strokec10 If you want, I can sketch a minimal 
\f9\fs26 SceneFitter.fit(scene, policy)
\f6\fs24  that wires your existing normal\uc0\u8209 matrix loops into component assembly + solve with the \'93bright\u8209 only gradients\'94 flag.\
\pard\tx220\tx720\pardeftab720\li720\fi-720\sa80\partightenfactor0

\f0\fs28 \cf2 \strokec2 \
}